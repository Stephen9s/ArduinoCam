<script>

	// Function set for when the user hovers over an image in the gallery, the larger image will be replaced
	$(function() {
		$(".image").hover(function() {
			var image = $(this).attr("rel");
			$('#image').fadeTo('slow');
			$('#image').html('<img src="' + image + '" width="320" height="240"/>');
			return false;
	    	});
	    $( ".image" ).click( removePhotoHandler );
 
            // Callback function references the event target and adds the 'tap' class to it
            function removePhotoHandler( event ) {
            		// console.log(event); used this to look at object contents to retrieve the information that I needed
            		var remove_photo = confirm("Remove " + $(event.target).attr("alt") + "?");
            		var id_of_img = $(event.target).attr("data-img-id");
        			if (remove_photo == true) {     
        				
        				// GET request with routes update allows me to delete file safely
        				// Originally had filename being sent, but it's best if the ID is used because of Rails' ActiveRecord abstraction
        				jQuery.ajax({
					        type: "GET",
					        url: "/gallery/removePhoto/"+id_of_img+"",
					        success: function(msg){
					        	alert("Image deleted.");
					        },
				            failure: function() {
				                alert("Image could not be deleted.");
				            }
						});
        				   				
        				// Removes from list.
        				$(this).closest('li').remove();
        			}  			
        			
        		}
	});
	
	// Code modified from http://css-plus.com/2010/09/create-your-own-jquery-image-slider/
	$(document).ready(function() {
		if(jQuery("#gallery").length) {
			
			var totalImages = jQuery("#gallery > li").length
			var imageWidth  = jQuery("#gallery > li:first").outerWidth(true)
			var totalWidth = imageWidth * totalImages
			var visibleImages = Math.round(jQuery("#gallery-wrap").width() / imageWidth)
			var visibleWidth = visibleImages * imageWidth
			var stopPosition = (visibleWidth - totalWidth)
			
			// Variables initialized that are used for navigating the gallery
			// Code modified by me, Stephen Neyens
			var multiplier = 1;			// Multiplier used to shift N number of images
			var timer;					// Timer declared
			var interval = 1;			// Interval is a 1-sec timer when hovering over the +1/-1 image slider
			
			jQuery("#gallery").width(totalWidth);
			
			// Multipler and interval timer reset to 1 and click() replaced with hover() so that the user
			// can hover over "<" and shift the gallery one image to the left while hovering.
			jQuery("#gallery-prev").hover(function() {
				multiplier = 1;
				interval = 1;
				timer = slideLeft();
			}, function() {
				clearInterval(timer);
			});
			
			// Multiplier changed to 10 (ten images)
			// No timer used
			jQuery("#gallery-prev-10").click(function() {
				multiplier = 10;
				slideLeftClick();
			});
			
			// Multiplier changed to 20 (ten images)
			// No timer used
			jQuery("#gallery-prev-20").click(function() {
				multiplier = 20;
				slideLeftClick();
			});
			
			// Same as gallery-prev
			jQuery("#gallery-next").hover(function() {
				multiplier = 1;
				interval = 1;
				timer = slideRight();
			}, function() {
				clearInterval(timer);
			});
			
			// Same as prev-10, but move right and no hover.
			jQuery("#gallery-next-10").click(function() {
				multiplier = 10;
				slideRightClick();
			});
			
			// Same as prev-20, but move right and no hover.
			jQuery("#gallery-next-20").click(function() {
				multiplier = 20;
				slideRightClick();
			});
			
			// Function called on hover() and imageWidth multiplied by the multiplier supplied
			// slideRight() can be called and given a different multiplier, but one at a time is best
			function slideRight() {
				return setInterval(function() {
					if(jQuery("#gallery").position().left > stopPosition && !jQuery("#gallery").is(":animated")) {
						jQuery("#gallery").animate({left : "-=" + imageWidth*multiplier + "px"});
					}
				}, interval);
			}
			
			// No timer used; user must click because we will provided a different multiplier (10 or 20) and shift that many images
			function slideRightClick() {
					if(jQuery("#gallery").position().left > stopPosition && !jQuery("#gallery").is(":animated")) {
						jQuery("#gallery").animate({left : "-=" + imageWidth*multiplier + "px"}, {duration: 1000, easing: 'swing'});
					}
			}
			
			// Function called on hover() and imageWidth multiplied by the multiplier supplied
			// slideLeft() can be called and given a different multiplier, but one at a time is best
			function slideLeft() {
				return setInterval(function() {
					if(jQuery("#gallery").position().left < 0 && !jQuery("#gallery").is(":animated")) {
						jQuery("#gallery").animate({left : "+=" + imageWidth*multiplier + "px"});
					}
				}, interval);
			}
			
			// No timer used; user must click because we will provided a different multiplier (10 or 20) and shift that many images
			function slideLeftClick() {
					if(jQuery("#gallery").position().left < 0 && !jQuery("#gallery").is(":animated")) {
						jQuery("#gallery").animate({left : "+=" + imageWidth*multiplier + "px"}, {duration: 1000, easing: 'swing'});
					}
			}
			
		}
	});

</script>
<% if @snapshots.size > 0 %>
	<div id="gallery-container">
		<div id="image">
			<%= image_tag(@snapshots.first.filename, :width => 320, :height => 240) %>
		</div>
		<div id="gallery-wrap">
		    <ul id="gallery">
				<% @snapshots.each_with_index do |snapshot, index| %>          
		    		<li>
		    			<a href="#" rel="/assets/<%= snapshot.filename %>" class="image">
		    				<%= image_tag(snapshot.filename, :width => 160, :height => 120, "data-img-id" => snapshot.id)%>
		    			</a>
		    			<br />
		    			<div id="timestamp">
		    				<%= snapshot.year << "-" << snapshot.month << "-" << snapshot.day %>
		    				<br />
		    				<%= snapshot.hour << ":" << snapshot.minute << ":" << snapshot.second %>
		    			</div>
		    		</li>
				<% end %>
		    </ul>
		</div>
		<div id="gallery-controls">
		    <a href="#" id="gallery-prev"><</a>
		    <% if @snapshots.size > 10%>
		    	<a href="#" id="gallery-prev-10"><<</a>
		    	<% if @snapshots.size > 20 %>
		    		<a href="#" id="gallery-prev-20"><<<</a>
		    	<% end %>
		    <% end %>
		    <a href="#" id="gallery-next">></a>
		    <% if @snapshots.size > 10%>
		    	<a href="#" id="gallery-next-10">>></a>
		    	<% if @snapshots.size > 20 %>
		    		<a href="#" id="gallery-next-20">>>></a>
		    	<% end %>
		    <% end%>
		</div>
	</div>
<% else %>
	<div id="no-results">
		No snapshots available.
	</div>
<% end%>
